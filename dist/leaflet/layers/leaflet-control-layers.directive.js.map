{"version":3,"sources":["leaflet/layers/leaflet-control-layers.directive.ts"],"names":[],"mappings":";AAAA,qBAAkE,eAAe,CAAC,CAAA;AAElF,IAAY,CAAC,WAAM,SAAS,CAAC,CAAA;AAE7B,kCAAiC,2BAA2B,CAAC,CAAA;AAM7D;IAiBC,uCAAY,gBAAkC;QAC7C,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;IAC1C,CAAC;IAED,gDAAQ,GAAR;QAEC,kCAAkC;QAClC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;IAEnF,CAAC;IAED,mDAAW,GAAX,UAAY,OAAwC;QAEnD,iBAAiB;QACjB,EAAE,CAAC,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,YAAY,CAAC,CAAC;QACvE,CAAC;IAEF,CAAC;IAEO,+DAAuB,GAA/B,UAAgC,aAAkB,EAAE,cAAmB;QAEtE,IAAI,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC;QAEzC,EAAE,CAAC,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,EAAE,cAAc,CAAC;iBAClE,KAAK,CAAC,GAAG,CAAC,CAAC;QACd,CAAC;IACF,CAAC;IAEO,8DAAsB,GAA9B,UAA+B,aAAkB;QAEhD,IAAI,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC;QAEzC,EAAE,CAAC,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC;QAIlB,CAAC;IAEF,CAAC;IA7CD;QAAC,YAAK,CAAC,sBAAsB,CAAC;;8EAAA;IAE9B;QAAC,YAAK,CAAC,6BAA6B,CAAC;;+EAAA;IAjBtC;QAAC,gBAAS,CAAC;YACV,QAAQ,EAAE,wBAAwB;SAClC,CAAC;;qCAAA;IA4DF,oCAAC;AAAD,CA3DA,AA2DC,IAAA;AA3DY,qCAA6B,gCA2DzC,CAAA","file":"leaflet-control-layers.directive.js","sourcesContent":["import { Directive, Input, OnChanges, OnInit, SimpleChange } from '@angular/core';\n\nimport * as L from 'leaflet';\n\nimport { LeafletDirective } from '../core/leaflet.directive';\n\n\n@Directive({\n\tselector: '[leafletLayersControl]'\n})\nexport class LeafletLayersControlDirective\n\timplements OnChanges, OnInit {\n\n\tleafletDirective: LeafletDirective;\n\n\t// Reference to the primary map object\n\tmap: L.Map;\n\n\t// The layers control object\n\tlayersControl: L.Control.Layers;\n\n\t// Control Layers Configuration\n\t@Input('leafletLayersControl') layersControlConfig: any;\n\n\t@Input('leafletLayersControlOptions') layersControlOptions: any;\n\n\n\tconstructor(leafletDirective: LeafletDirective) {\n\t\tthis.leafletDirective = leafletDirective;\n\t}\n\n\tngOnInit() {\n\n\t\t// Set up all the initial settings\n\t\tthis.initializeLayersControl(this.layersControlConfig, this.layersControlOptions);\n\n\t}\n\n\tngOnChanges(changes: { [key: string]: SimpleChange }) {\n\n\t\t// Set the layers\n\t\tif (changes['layersControlCfg']) {\n\t\t\tthis.setLayersControlConfig(changes['layersControlCfg'].currentValue);\n\t\t}\n\n\t}\n\n\tprivate initializeLayersControl(controlConfig: any, controlOptions: any) {\n\n\t\tlet map = this.leafletDirective.getMap();\n\n\t\tif (null != map) {\n\t\t\tthis.layersControl = L.control.layers(controlConfig, controlOptions)\n\t\t\t\t.addTo(map);\n\t\t}\n\t}\n\n\tprivate setLayersControlConfig(controlConfig: any) {\n\n\t\tlet map = this.leafletDirective.getMap();\n\n\t\tif (null != map) {\n\n\t\t\t// Sync the sets of layers\n\n\t\t}\n\n\t}\n\n}\n"]}