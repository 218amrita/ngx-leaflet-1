{"version":3,"sources":["leaflet/layers/leaflet-layers.directive.ts"],"names":[],"mappings":";AAAA,qBAAkE,eAAe,CAAC,CAAA;AAIlF,kCAAiC,2BAA2B,CAAC,CAAA;AAK7D;IAWC,gCAAY,gBAAkC;QAC7C,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;IAC1C,CAAC;IAED,yCAAQ,GAAR;QAEC,kCAAkC;QAClC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAE7B,CAAC;IAED,4CAAW,GAAX,UAAY,OAAwC;QAEnD,iBAAiB;QACjB,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;QAChD,CAAC;IAEF,CAAC;IAED;;;OAGG;IACK,0CAAS,GAAjB,UAAkB,MAAiB;QAElC,IAAI,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC;QAEzC,EAAE,CAAC,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC;YAEjB,6BAA6B;YAC7B,GAAG,CAAC,SAAS,CAAC,UAAC,KAAc;gBAC5B,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC;YAEH,qBAAqB;YACrB,EAAE,CAAC,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC;gBACpB,MAAM,CAAC,OAAO,CAAC,UAAC,KAAc;oBAC7B,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACrB,CAAC,CAAC,CAAC;YACJ,CAAC;QAEF,CAAC;IAEF,CAAC;IA9CD;QAAC,YAAK,CAAC,eAAe,CAAC;;0DAAA;IAZxB;QAAC,gBAAS,CAAC;YACV,QAAQ,EAAE,iBAAiB;SAC3B,CAAC;;8BAAA;IA0DF,6BAAC;AAAD,CAzDA,AAyDC,IAAA;AAzDY,8BAAsB,yBAyDlC,CAAA","file":"leaflet-layers.directive.js","sourcesContent":["import { Directive, Input, OnChanges, OnInit, SimpleChange } from '@angular/core';\n\nimport * as L from 'leaflet';\n\nimport { LeafletDirective } from '../core/leaflet.directive';\n\n@Directive({\n\tselector: '[leafletLayers]'\n})\nexport class LeafletLayersDirective\n\timplements OnChanges, OnInit {\n\n\tleafletDirective: LeafletDirective;\n\n\t// Reference to the primary map object\n\tmap: L.Map;\n\n\t// Array of configured layers\n\t@Input('leafletLayers') layers: L.Layer [];\n\n\tconstructor(leafletDirective: LeafletDirective) {\n\t\tthis.leafletDirective = leafletDirective;\n\t}\n\n\tngOnInit() {\n\n\t\t// Set up all the initial settings\n\t\tthis.setLayers(this.layers);\n\n\t}\n\n\tngOnChanges(changes: { [key: string]: SimpleChange }) {\n\n\t\t// Set the layers\n\t\tif (changes['layers']) {\n\t\t\tthis.setLayers(changes['layers'].currentValue);\n\t\t}\n\n\t}\n\n\t/**\n\t * Replace the current layers in the map with the provided array\n\t * @param layers The new complete array of layers for the map\n\t */\n\tprivate setLayers(layers: L.Layer[]) {\n\n\t\tlet map = this.leafletDirective.getMap();\n\n\t\tif (null != map) {\n\n\t\t\t// Remove all existing layers\n\t\t\tmap.eachLayer((layer: L.Layer) => {\n\t\t\t\tmap.removeLayer(layer);\n\t\t\t});\n\n\t\t\t// Add the new layers\n\t\t\tif (null != layers) {\n\t\t\t\tlayers.forEach((layer: L.Layer) => {\n\t\t\t\t\tmap.addLayer(layer);\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n"]}